<UserControl x:Class="TaskMaster.Views.NewTaskPopup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <UserControl.Resources>
        <!-- Converters -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <!-- Gradient Brushes -->
        <LinearGradientBrush x:Key="PurplePinkGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#7C3AED" Offset="0"/>
            <GradientStop Color="#EC4899" Offset="1"/>
        </LinearGradientBrush>

        <!-- Design System Colors (consistent with MainWindow) -->
        <SolidColorBrush x:Key="CardBackground" Color="#1A1F2E"/>
        <SolidColorBrush x:Key="BorderColor" Color="#3A3F4B"/>
        <SolidColorBrush x:Key="TextPrimary" Color="#F9FAFB"/>
        <SolidColorBrush x:Key="TextSecondary" Color="#D1D5DB"/>
        <SolidColorBrush x:Key="TextMuted" Color="#9CA3AF"/>

        <!-- Standard Shadows -->
        <DropShadowEffect x:Key="CardShadow" ShadowDepth="0" Color="#000000" Opacity="0.15" BlurRadius="12"/>

        <!-- Use StandardTextBox for text inputs -->
        <Style x:Key="StandardTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource CardBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"
                                        Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#7C3AED"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#EC4899"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Compact Primary Button -->
        <Style x:Key="CompactPrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PurplePinkGradient}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="Height" Value="36"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="0.9"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" Value="0.8"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Compact Ghost Button -->
        <Style x:Key="CompactGhostButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="MinWidth" Value="60"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CardBackground}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource TextPrimary}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource BorderColor}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource TextPrimary}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource TextMuted}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <!-- Popup Content Card -->
    <Border Background="#1A1F2E" CornerRadius="16"
            BorderBrush="#7C3AED" BorderThickness="2"
            Width="400" MaxHeight="600" Height="Auto" MinHeight="540"
            MouseDown="NewTaskPopup_MouseDown">
        <Border.Effect>
            <DropShadowEffect ShadowDepth="0" Color="#7C3AED" Opacity="0.6" BlurRadius="32"/>
        </Border.Effect>

        <Grid Margin="32,28">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Scrollable Content Area -->
            <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <StackPanel>
            <!-- Compact Header -->
            <StackPanel Orientation="Horizontal" Margin="0,0,0,18" HorizontalAlignment="Center">
                <TextBlock Text="✨" FontSize="18" Margin="0,0,8,0" VerticalAlignment="Center"/>
                <TextBlock Text="Create New Task" FontSize="18" FontWeight="Bold"
                           Foreground="{StaticResource TextPrimary}" VerticalAlignment="Center"/>
            </StackPanel>

            <!-- Project Selection -->
            <StackPanel Margin="0,0,0,14">
                <TextBlock Text="Project" FontWeight="SemiBold" Margin="0,0,0,4"
                           Foreground="{StaticResource TextSecondary}" FontSize="14"/>
                <ComboBox Name="ProjectComboBox"
                          ItemsSource="{Binding Projects}"
                          SelectedItem="{Binding SelectedProject}"
                          DisplayMemberPath="Name"
                          Style="{DynamicResource BeautifulComboBox}"
                          Height="36"/>
            </StackPanel>

            <!-- Task Title -->
            <StackPanel Margin="0,0,0,14">
                <TextBlock Text="Task Title" FontWeight="SemiBold" Margin="0,0,0,4"
                           Foreground="{StaticResource TextSecondary}" FontSize="14"/>
                <TextBox Name="TitleTextBox"
                         Text="{Binding TaskTitle, UpdateSourceTrigger=PropertyChanged}"
                         Style="{StaticResource StandardTextBox}"
                         Height="36"/>
            </StackPanel>

            <!-- Task Summary -->
            <StackPanel Margin="0,0,0,14">
                <TextBlock Text="Summary (optional)" FontWeight="SemiBold" Margin="0,0,0,4"
                           Foreground="{StaticResource TextSecondary}" FontSize="14"/>
                <TextBox Name="SummaryTextBox"
                         Text="{Binding TaskSummary, UpdateSourceTrigger=PropertyChanged}"
                         Style="{StaticResource StandardTextBox}"
                         Height="64" AcceptsReturn="True" TextWrapping="Wrap"
                         VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Top"/>
            </StackPanel>

            <!-- Task Type -->
            <StackPanel Margin="0,0,0,14">
                <TextBlock Text="Task Type" FontWeight="SemiBold" Margin="0,0,0,4"
                           Foreground="{StaticResource TextSecondary}" FontSize="14"/>
                <ComboBox Name="TypeComboBox"
                          SelectedValue="{Binding TaskType}"
                          SelectedValuePath="Tag"
                          Style="{DynamicResource BeautifulComboBox}"
                          Height="36">
                    <ComboBoxItem Content="🚀 feature" Tag="feature" IsSelected="True"/>
                    <ComboBoxItem Content="🐛 bug" Tag="bug"/>
                    <ComboBoxItem Content="✨ enhancement" Tag="enhancement"/>
                    <ComboBoxItem Content="🧪 test" Tag="test"/>
                    <ComboBoxItem Content="🔧 refactor" Tag="refactor"/>
                </ComboBox>
            </StackPanel>

            <!-- AI Enhancement Toggle -->
            <StackPanel Margin="0,0,0,20">
                <CheckBox Name="AIEnhancementCheckBox"
                          IsChecked="{Binding UseAIEnhancement}"
                          Content="⚡ AI-Enhanced Content Generation"
                          Foreground="{StaticResource TextSecondary}" FontSize="14" FontWeight="Medium"
                          VerticalAlignment="Center">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="CheckBox">
                                        <StackPanel Orientation="Horizontal">
                                            <Border x:Name="checkBoxBorder"
                                                    Width="16" Height="16"
                                                    Background="#1F2937"
                                                    BorderBrush="#7C3AED"
                                                    BorderThickness="1"
                                                    CornerRadius="3"
                                                    VerticalAlignment="Center"
                                                    Margin="0,0,8,0">
                                                <Path x:Name="checkMark"
                                                      Data="M 3 7 L 6 10 L 12 3"
                                                      Stroke="#7C3AED"
                                                      StrokeThickness="2"
                                                      Visibility="Collapsed"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                                            </Border>
                                            <ContentPresenter Content="{TemplateBinding Content}"
                                                            VerticalAlignment="Center"/>
                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="checkBoxBorder" Property="Background" Value="#7C3AED"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#EC4899"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <TextBlock Text="Automatically generate detailed acceptance criteria, test plans, and implementation notes"
                           FontSize="12" Foreground="{StaticResource TextMuted}" Margin="24,4,0,0" TextWrapping="Wrap"/>
            </StackPanel>

            <!-- Loading Indicator -->
            <StackPanel Margin="0,0,0,14" HorizontalAlignment="Center"
                        Visibility="{Binding IsGenerating, Converter={StaticResource BoolToVisibilityConverter}}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,8">
                    <TextBlock Text="⚡" FontSize="14" Foreground="#7C3AED" VerticalAlignment="Center" Margin="0,0,4,0"/>
                    <TextBlock Text="Enhancing with AI..." FontSize="14" Foreground="{StaticResource TextSecondary}" VerticalAlignment="Center"/>
                </StackPanel>
                <ProgressBar IsIndeterminate="True" Width="200" Height="4"
                             Background="#374151" Foreground="#7C3AED"/>
                <TextBlock Text="Generating detailed specifications and acceptance criteria"
                           FontSize="12" Foreground="{StaticResource TextMuted}" HorizontalAlignment="Center" Margin="0,6,0,0"/>
            </StackPanel>

                </StackPanel>
            </ScrollViewer>

            <!-- Fixed Action Buttons at Bottom -->
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,0">
                <Button Name="CancelButton"
                        Click="CancelButton_Click"
                        Content="Cancel"
                        Background="{StaticResource CardBackground}"
                        Foreground="{StaticResource TextPrimary}"
                        BorderThickness="1"
                        BorderBrush="{StaticResource BorderColor}"
                        Padding="12,8"
                        FontSize="14"
                        FontWeight="Medium"
                        MinWidth="80"
                        Height="36"
                        Margin="0,0,12,0">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="border" Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="8" Padding="{TemplateBinding Padding}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" TargetName="border" Value="#7C3AED"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Name="CreateButton" Click="CreateButton_Click"
                        Style="{StaticResource CompactPrimaryButton}"
                        IsEnabled="{Binding CanCreateTask}">
                    <Button.Content>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="✨ Create Task"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsGenerating}" Value="True">
                                            <Setter Property="Text" Value="⚡ Generating..."/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Button.Content>
                </Button>
            </StackPanel>
        </Grid>
    </Border>
</UserControl>